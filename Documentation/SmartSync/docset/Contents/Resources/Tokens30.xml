<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/SFSmartSyncSyncManager.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/SFSmartSyncSyncManager</TokenIdentifier>
			<Abstract type="html">This class provides methods for doing synching records to/from the server from/to the smartstore.</Abstract>
			<DeclaredIn>SFSmartSyncSyncManager.h</DeclaredIn>
            
			
			<NodeRef refid="30"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSmartSyncSyncManager/setStore:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>SFSmartSyncSyncManager.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) SFSmartStore *store</Declaration>
			
			
			<Anchor>//api/name/store</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSmartSyncSyncManager/store</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>SFSmartSyncSyncManager.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) SFSmartStore *store</Declaration>
			
			
			<Anchor>//api/name/store</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SFSmartSyncSyncManager/store</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>SFSmartSyncSyncManager.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong, readonly) SFSmartStore *store</Declaration>
			
			
			<Anchor>//api/name/store</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/SFSmartSyncSyncManager/sharedInstance:</TokenIdentifier>
			<Abstract type="html">Singleton method for accessing sync manager instance by user. Configured SmartStore store will be
the default store for the user.</Abstract>
			<DeclaredIn>SFSmartSyncSyncManager.h</DeclaredIn>
			
			<Declaration>+ (instancetype)sharedInstance:(SFUserAccount *)user</Declaration>
			<Parameters>
				<Parameter>
					<Name>user</Name>
					<Abstract type="html">A user that will scope this manager instance data.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/sharedInstance:</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/SFSmartSyncSyncManager/sharedInstanceForUser:storeName:</TokenIdentifier>
			<Abstract type="html">Singleton method for accessing a sync manager based on user and store name. Configured SmartStore
store will be the store with the given name for the given user.</Abstract>
			<DeclaredIn>SFSmartSyncSyncManager.h</DeclaredIn>
			
			<Declaration>+ (instancetype)sharedInstanceForUser:(SFUserAccount *)user storeName:(nullable NSString *)storeName</Declaration>
			<Parameters>
				<Parameter>
					<Name>user</Name>
					<Abstract type="html">The user associated with the store.</Abstract>
				</Parameter><Parameter>
					<Name>storeName</Name>
					<Abstract type="html">The name of the SmartStore associated with the user.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/sharedInstanceForUser:storeName:</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/SFSmartSyncSyncManager/sharedInstanceForStore:userAccount:</TokenIdentifier>
			<Abstract type="html">Singleton method for accessing a sync manager based on user and store name. Configured SmartStore
store will be the store with the given name for the given user.</Abstract>
			<DeclaredIn>SFSmartSyncSyncManager.h</DeclaredIn>
			
			<Declaration>+ (instancetype)sharedInstanceForStore:(nullable NSString *)storeName userAccount:(SFUserAccount *)userAccount</Declaration>
			<Parameters>
				<Parameter>
					<Name>storeName</Name>
					<Abstract type="html">The name of the SmartStore associated with the user.</Abstract>
				</Parameter><Parameter>
					<Name>userAccount</Name>
					<Abstract type="html">The user associated with the store.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/sharedInstanceForStore:userAccount:</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/SFSmartSyncSyncManager/sharedInstanceForStore:</TokenIdentifier>
			<Abstract type="html">Singleton method for accessing sync manager instance by SmartStore store.</Abstract>
			<DeclaredIn>SFSmartSyncSyncManager.h</DeclaredIn>
			
			<Declaration>+ (nullable instancetype)sharedInstanceForStore:(SFSmartStore *)store</Declaration>
			<Parameters>
				<Parameter>
					<Name>store</Name>
					<Abstract type="html">The store instance to configure.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/sharedInstanceForStore:</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/SFSmartSyncSyncManager/removeSharedInstance:</TokenIdentifier>
			<Abstract type="html">Removes the shared instance associated with the specified user.</Abstract>
			<DeclaredIn>SFSmartSyncSyncManager.h</DeclaredIn>
			
			<Declaration>+ (void)removeSharedInstance:(SFUserAccount *)user</Declaration>
			<Parameters>
				<Parameter>
					<Name>user</Name>
					<Abstract type="html">The user.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/removeSharedInstance:</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/SFSmartSyncSyncManager/removeSharedInstanceForUser:storeName:</TokenIdentifier>
			<Abstract type="html">Removes the shared instance associated with the given user and store name.</Abstract>
			<DeclaredIn>SFSmartSyncSyncManager.h</DeclaredIn>
			
			<Declaration>+ (void)removeSharedInstanceForUser:(SFUserAccount *)user storeName:(nullable NSString *)storeName</Declaration>
			<Parameters>
				<Parameter>
					<Name>user</Name>
					<Abstract type="html">The user associated with the store.</Abstract>
				</Parameter><Parameter>
					<Name>storeName</Name>
					<Abstract type="html">The name of the store associated with the given user.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/removeSharedInstanceForUser:storeName:</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/SFSmartSyncSyncManager/removeSharedInstanceForStore:userAccount:</TokenIdentifier>
			<Abstract type="html">Removes the shared instance associated with the given user and store name.</Abstract>
			<DeclaredIn>SFSmartSyncSyncManager.h</DeclaredIn>
			
			<Declaration>+ (void)removeSharedInstanceForStore:(nullable NSString *)storeName userAccount:(SFUserAccount *)userAccount</Declaration>
			<Parameters>
				<Parameter>
					<Name>storeName</Name>
					<Abstract type="html">The name of the store associated with the given user.</Abstract>
				</Parameter><Parameter>
					<Name>userAccount</Name>
					<Abstract type="html">The user associated with the store.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/removeSharedInstanceForStore:userAccount:</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/SFSmartSyncSyncManager/removeSharedInstanceForStore:</TokenIdentifier>
			<Abstract type="html">Removes the shared instance associated with the specified store.</Abstract>
			<DeclaredIn>SFSmartSyncSyncManager.h</DeclaredIn>
			
			<Declaration>+ (void)removeSharedInstanceForStore:(SFSmartStore *)store</Declaration>
			<Parameters>
				<Parameter>
					<Name>store</Name>
					<Abstract type="html">The store instance.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/removeSharedInstanceForStore:</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/SFSmartSyncSyncManager/removeSharedInstances</TokenIdentifier>
			<Abstract type="html">Removes all shared instances</Abstract>
			<DeclaredIn>SFSmartSyncSyncManager.h</DeclaredIn>
			
			<Declaration>+ (void)removeSharedInstances</Declaration>
			
			
			<Anchor>//api/name/removeSharedInstances</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSmartSyncSyncManager/stop</TokenIdentifier>
			<Abstract type="html">Stop the sync manager
It might take a while for active syncs to actually get stopped
Call isStopped to see if syncManager is fully paused</Abstract>
			<DeclaredIn>SFSmartSyncSyncManager.h</DeclaredIn>
			
			<Declaration>- (void)stop</Declaration>
			
			
			<Anchor>//api/name/stop</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSmartSyncSyncManager/isStopping</TokenIdentifier>
			<Abstract type="html">YES if stop was requested but there are still active syncs</Abstract>
			<DeclaredIn>SFSmartSyncSyncManager.h</DeclaredIn>
			
			<Declaration>- (BOOL)isStopping</Declaration>
			
			<ReturnValue><Abstract type="html">YES if stop was requested but there are still active syncs</Abstract></ReturnValue>
			<Anchor>//api/name/isStopping</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSmartSyncSyncManager/isStopped</TokenIdentifier>
			<Abstract type="html">YES if stop was requested and there no syncs are active anymore</Abstract>
			<DeclaredIn>SFSmartSyncSyncManager.h</DeclaredIn>
			
			<Declaration>- (BOOL)isStopped</Declaration>
			
			<ReturnValue><Abstract type="html">YES if stop was requested and there no syncs are active anymore</Abstract></ReturnValue>
			<Anchor>//api/name/isStopped</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSmartSyncSyncManager/restart:updateBlock:error:</TokenIdentifier>
			<Abstract type="html">Restart this sync manager</Abstract>
			<DeclaredIn>SFSmartSyncSyncManager.h</DeclaredIn>
			
			<Declaration>- (BOOL)restart:(BOOL)restartStoppedSyncs updateBlock:(SFSyncSyncManagerUpdateBlock)updateBlock error:(NSError **)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>restartStoppedSyncs</Name>
					<Abstract type="html">Pass YES to restart all stopped sync.</Abstract>
				</Parameter><Parameter>
					<Name>updateBlock</Name>
					<Abstract type="html">The block to be called with updates.</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">To get an error back (optional).</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">YES if restarted successfully.</Abstract></ReturnValue>
			<Anchor>//api/name/restart:updateBlock:error:</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSmartSyncSyncManager/checkAcceptingSyncs:</TokenIdentifier>
			<Abstract type="html">Check if sync manager is running</Abstract>
			<DeclaredIn>SFSmartSyncSyncManager.h</DeclaredIn>
			
			<Declaration>- (BOOL)checkAcceptingSyncs:(NSError **)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>error</Name>
					<Abstract type="html">To get an error back (optional).</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">YES if running and NO if stopping or stopped</Abstract></ReturnValue>
			<Anchor>//api/name/checkAcceptingSyncs:</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSmartSyncSyncManager/getSyncStatus:</TokenIdentifier>
			<Abstract type="html">Returns details about a sync.</Abstract>
			<DeclaredIn>SFSmartSyncSyncManager.h</DeclaredIn>
			
			<Declaration>- (nullable SFSyncState *)getSyncStatus:(NSNumber *)syncId</Declaration>
			<Parameters>
				<Parameter>
					<Name>syncId</Name>
					<Abstract type="html">Sync ID.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getSyncStatus:</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSmartSyncSyncManager/getSyncStatusByName:</TokenIdentifier>
			<Abstract type="html">Returns details about a sync by name.</Abstract>
			<DeclaredIn>SFSmartSyncSyncManager.h</DeclaredIn>
			
			<Declaration>- (nullable SFSyncState *)getSyncStatusByName:(NSString *)syncName</Declaration>
			<Parameters>
				<Parameter>
					<Name>syncName</Name>
					<Abstract type="html">Sync name.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getSyncStatusByName:</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSmartSyncSyncManager/hasSyncWithName:</TokenIdentifier>
			<Abstract type="html">Returns YES if a sync with the given name exists.</Abstract>
			<DeclaredIn>SFSmartSyncSyncManager.h</DeclaredIn>
			
			<Declaration>- (BOOL)hasSyncWithName:(NSString *)syncName</Declaration>
			<Parameters>
				<Parameter>
					<Name>syncName</Name>
					<Abstract type="html">Sync name.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">YES a sync with the given name exists.</Abstract></ReturnValue>
			<Anchor>//api/name/hasSyncWithName:</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSmartSyncSyncManager/deleteSyncById:</TokenIdentifier>
			<Abstract type="html">Delete a sync.</Abstract>
			<DeclaredIn>SFSmartSyncSyncManager.h</DeclaredIn>
			
			<Declaration>- (void)deleteSyncById:(NSNumber *)syncId</Declaration>
			<Parameters>
				<Parameter>
					<Name>syncId</Name>
					<Abstract type="html">Sync ID.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteSyncById:</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSmartSyncSyncManager/deleteSyncByName:</TokenIdentifier>
			<Abstract type="html">Delete a sync by name.</Abstract>
			<DeclaredIn>SFSmartSyncSyncManager.h</DeclaredIn>
			
			<Declaration>- (void)deleteSyncByName:(NSString *)syncName</Declaration>
			<Parameters>
				<Parameter>
					<Name>syncName</Name>
					<Abstract type="html">Sync name.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/deleteSyncByName:</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSmartSyncSyncManager/createSyncDown:options:soupName:syncName:</TokenIdentifier>
			<Abstract type="html">Creates a sync down without running it.</Abstract>
			<DeclaredIn>SFSmartSyncSyncManager.h</DeclaredIn>
			
			<Declaration>- (SFSyncState *)createSyncDown:(SFSyncDownTarget *)target options:(SFSyncOptions *)options soupName:(NSString *)soupName syncName:(nullable NSString *)syncName</Declaration>
			<Parameters>
				<Parameter>
					<Name>target</Name>
					<Abstract type="html">The sync down target that will manage the sync down process.</Abstract>
				</Parameter><Parameter>
					<Name>options</Name>
					<Abstract type="html">The options associated with this sync down.</Abstract>
				</Parameter><Parameter>
					<Name>soupName</Name>
					<Abstract type="html">The soup name where the local entries are stored.</Abstract>
				</Parameter><Parameter>
					<Name>syncName</Name>
					<Abstract type="html">The name for this sync.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The sync state associated with this sync down.</Abstract></ReturnValue>
			<Anchor>//api/name/createSyncDown:options:soupName:syncName:</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSmartSyncSyncManager/syncDownWithTarget:soupName:updateBlock:</TokenIdentifier>
			<Abstract type="html">Creates and runs a sync down that will overwrite any modified records.</Abstract>
			<DeclaredIn>SFSmartSyncSyncManager.h</DeclaredIn>
			
			<Declaration>- (nullable SFSyncState *)syncDownWithTarget:(SFSyncDownTarget *)target soupName:(NSString *)soupName updateBlock:(SFSyncSyncManagerUpdateBlock)updateBlock</Declaration>
			<Parameters>
				<Parameter>
					<Name>target</Name>
					<Abstract type="html">The sync down target that will manage the sync down process.</Abstract>
				</Parameter><Parameter>
					<Name>soupName</Name>
					<Abstract type="html">The soup name where the local entries are stored.</Abstract>
				</Parameter><Parameter>
					<Name>updateBlock</Name>
					<Abstract type="html">The block to be called with updates.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The sync state associated with this sync or nil if it could not be created.</Abstract></ReturnValue>
			<Anchor>//api/name/syncDownWithTarget:soupName:updateBlock:</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSmartSyncSyncManager/syncDownWithTarget:options:soupName:updateBlock:</TokenIdentifier>
			<Abstract type="html">Creates and runs a sync down.</Abstract>
			<DeclaredIn>SFSmartSyncSyncManager.h</DeclaredIn>
			
			<Declaration>- (nullable SFSyncState *)syncDownWithTarget:(SFSyncDownTarget *)target options:(SFSyncOptions *)options soupName:(NSString *)soupName updateBlock:(SFSyncSyncManagerUpdateBlock)updateBlock</Declaration>
			<Parameters>
				<Parameter>
					<Name>target</Name>
					<Abstract type="html">The sync down target that will manage the sync down process.</Abstract>
				</Parameter><Parameter>
					<Name>options</Name>
					<Abstract type="html">The options associated with this sync down.</Abstract>
				</Parameter><Parameter>
					<Name>soupName</Name>
					<Abstract type="html">The soup name where the local entries are stored.</Abstract>
				</Parameter><Parameter>
					<Name>updateBlock</Name>
					<Abstract type="html">The block to be called with updates.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The sync state associated with this sync or nil if it could not be created.</Abstract></ReturnValue>
			<Anchor>//api/name/syncDownWithTarget:options:soupName:updateBlock:</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSmartSyncSyncManager/syncDownWithTarget:options:soupName:syncName:updateBlock:</TokenIdentifier>
			<Abstract type="html">Creates and runs a named sync down.</Abstract>
			<DeclaredIn>SFSmartSyncSyncManager.h</DeclaredIn>
			
			<Declaration>- (nullable SFSyncState *)syncDownWithTarget:(SFSyncDownTarget *)target options:(SFSyncOptions *)options soupName:(NSString *)soupName syncName:(nullable NSString *)syncName updateBlock:(SFSyncSyncManagerUpdateBlock)updateBlock</Declaration>
			<Parameters>
				<Parameter>
					<Name>target</Name>
					<Abstract type="html">The sync down target that will manage the sync down process.</Abstract>
				</Parameter><Parameter>
					<Name>options</Name>
					<Abstract type="html">The options associated with this sync down.</Abstract>
				</Parameter><Parameter>
					<Name>soupName</Name>
					<Abstract type="html">The soup name where the local entries are stored.</Abstract>
				</Parameter><Parameter>
					<Name>syncName</Name>
					<Abstract type="html">The name for this sync.</Abstract>
				</Parameter><Parameter>
					<Name>updateBlock</Name>
					<Abstract type="html">The block to be called with updates.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The sync state associated with this sync or nil if it could not be created.</Abstract></ReturnValue>
			<Anchor>//api/name/syncDownWithTarget:options:soupName:syncName:updateBlock:</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSmartSyncSyncManager/syncDownWithTarget:options:soupName:syncName:updateBlock:error:</TokenIdentifier>
			<Abstract type="html">Creates and runs a named sync down.</Abstract>
			<DeclaredIn>SFSmartSyncSyncManager.h</DeclaredIn>
			
			<Declaration>- (nullable SFSyncState *)syncDownWithTarget:(SFSyncDownTarget *)target options:(SFSyncOptions *)options soupName:(NSString *)soupName syncName:(nullable NSString *)syncName updateBlock:(SFSyncSyncManagerUpdateBlock)updateBlock error:(NSError **)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>target</Name>
					<Abstract type="html">The sync down target that will manage the sync down process.</Abstract>
				</Parameter><Parameter>
					<Name>options</Name>
					<Abstract type="html">The options associated with this sync down.</Abstract>
				</Parameter><Parameter>
					<Name>soupName</Name>
					<Abstract type="html">The soup name where the local entries are stored.</Abstract>
				</Parameter><Parameter>
					<Name>syncName</Name>
					<Abstract type="html">The name for this sync.</Abstract>
				</Parameter><Parameter>
					<Name>updateBlock</Name>
					<Abstract type="html">The block to be called with updates.</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">Sets error if sync could not be created.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The sync state associated with this sync or nil if it could not be created.</Abstract></ReturnValue>
			<Anchor>//api/name/syncDownWithTarget:options:soupName:syncName:updateBlock:error:</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSmartSyncSyncManager/reSync:updateBlock:</TokenIdentifier>
			<Abstract type="html">Performs a resync.</Abstract>
			<DeclaredIn>SFSmartSyncSyncManager.h</DeclaredIn>
			
			<Declaration>- (nullable SFSyncState *)reSync:(NSNumber *)syncId updateBlock:(SFSyncSyncManagerUpdateBlock)updateBlock</Declaration>
			<Parameters>
				<Parameter>
					<Name>syncId</Name>
					<Abstract type="html">Sync ID.</Abstract>
				</Parameter><Parameter>
					<Name>updateBlock</Name>
					<Abstract type="html">The block to be called with updates.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/reSync:updateBlock:</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSmartSyncSyncManager/reSync:updateBlock:error:</TokenIdentifier>
			<Abstract type="html">Performs a resync.</Abstract>
			<DeclaredIn>SFSmartSyncSyncManager.h</DeclaredIn>
			
			<Declaration>- (nullable SFSyncState *)reSync:(NSNumber *)syncId updateBlock:(SFSyncSyncManagerUpdateBlock)updateBlock error:(NSError **)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>syncId</Name>
					<Abstract type="html">Sync ID.</Abstract>
				</Parameter><Parameter>
					<Name>updateBlock</Name>
					<Abstract type="html">The block to be called with updates.</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">Sets error if sync could not be started.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The sync state associated with this sync or nil if it could not be started.</Abstract></ReturnValue>
			<Anchor>//api/name/reSync:updateBlock:error:</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSmartSyncSyncManager/reSyncByName:updateBlock:</TokenIdentifier>
			<Abstract type="html">Performs a resync by name.</Abstract>
			<DeclaredIn>SFSmartSyncSyncManager.h</DeclaredIn>
			
			<Declaration>- (nullable SFSyncState *)reSyncByName:(NSString *)syncName updateBlock:(SFSyncSyncManagerUpdateBlock)updateBlock</Declaration>
			<Parameters>
				<Parameter>
					<Name>syncName</Name>
					<Abstract type="html">Sync name.</Abstract>
				</Parameter><Parameter>
					<Name>updateBlock</Name>
					<Abstract type="html">The block to be called with updates.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The sync state associated with this sync or nil if it could not be started.</Abstract></ReturnValue>
			<Anchor>//api/name/reSyncByName:updateBlock:</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSmartSyncSyncManager/reSyncByName:updateBlock:error:</TokenIdentifier>
			<Abstract type="html">Performs a resync by name.</Abstract>
			<DeclaredIn>SFSmartSyncSyncManager.h</DeclaredIn>
			
			<Declaration>- (nullable SFSyncState *)reSyncByName:(NSString *)syncName updateBlock:(SFSyncSyncManagerUpdateBlock)updateBlock error:(NSError **)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>syncName</Name>
					<Abstract type="html">Sync name.</Abstract>
				</Parameter><Parameter>
					<Name>updateBlock</Name>
					<Abstract type="html">The block to be called with updates.</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">Sets error if sync could not be started.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The sync state associated with this sync or nil if it could not be started.</Abstract></ReturnValue>
			<Anchor>//api/name/reSyncByName:updateBlock:error:</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSmartSyncSyncManager/createSyncUp:options:soupName:syncName:</TokenIdentifier>
			<Abstract type="html">Create a sync up without running it.</Abstract>
			<DeclaredIn>SFSmartSyncSyncManager.h</DeclaredIn>
			
			<Declaration>- (SFSyncState *)createSyncUp:(SFSyncUpTarget *)target options:(SFSyncOptions *)options soupName:(NSString *)soupName syncName:(nullable NSString *)syncName</Declaration>
			<Parameters>
				<Parameter>
					<Name>target</Name>
					<Abstract type="html">The sync up target that will manage the sync up process.</Abstract>
				</Parameter><Parameter>
					<Name>options</Name>
					<Abstract type="html">The options associated with this sync up.</Abstract>
				</Parameter><Parameter>
					<Name>soupName</Name>
					<Abstract type="html">The soup name where the local entries are stored.</Abstract>
				</Parameter><Parameter>
					<Name>syncName</Name>
					<Abstract type="html">The name for this sync.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The sync state associated with this sync up.</Abstract></ReturnValue>
			<Anchor>//api/name/createSyncUp:options:soupName:syncName:</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSmartSyncSyncManager/syncUpWithOptions:soupName:updateBlock:</TokenIdentifier>
			<Abstract type="html">Creates and runs a sync up with the default SFSyncUpTarget.</Abstract>
			<DeclaredIn>SFSmartSyncSyncManager.h</DeclaredIn>
			
			<Declaration>- (nullable SFSyncState *)syncUpWithOptions:(SFSyncOptions *)options soupName:(NSString *)soupName updateBlock:(SFSyncSyncManagerUpdateBlock)updateBlock</Declaration>
			<Parameters>
				<Parameter>
					<Name>options</Name>
					<Abstract type="html">The options associated with this sync up.</Abstract>
				</Parameter><Parameter>
					<Name>soupName</Name>
					<Abstract type="html">The soup name where the local entries are stored.</Abstract>
				</Parameter><Parameter>
					<Name>updateBlock</Name>
					<Abstract type="html">The block to be called with updates.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The sync state associated with this sync or nil if it could not be created.</Abstract></ReturnValue>
			<Anchor>//api/name/syncUpWithOptions:soupName:updateBlock:</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSmartSyncSyncManager/syncUpWithTarget:options:soupName:updateBlock:</TokenIdentifier>
			<Abstract type="html">Creates and runs a sync up with the configured SFSyncUpTarget.</Abstract>
			<DeclaredIn>SFSmartSyncSyncManager.h</DeclaredIn>
			
			<Declaration>- (nullable SFSyncState *)syncUpWithTarget:(SFSyncUpTarget *)target options:(SFSyncOptions *)options soupName:(NSString *)soupName updateBlock:(SFSyncSyncManagerUpdateBlock)updateBlock</Declaration>
			<Parameters>
				<Parameter>
					<Name>target</Name>
					<Abstract type="html">The sync up target that will manage the sync up process.</Abstract>
				</Parameter><Parameter>
					<Name>options</Name>
					<Abstract type="html">The options associated with this sync up.</Abstract>
				</Parameter><Parameter>
					<Name>soupName</Name>
					<Abstract type="html">The soup name where the local entries are stored.</Abstract>
				</Parameter><Parameter>
					<Name>updateBlock</Name>
					<Abstract type="html">The block to be called with updates.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The sync state associated with this sync or nil if it could not be created.</Abstract></ReturnValue>
			<Anchor>//api/name/syncUpWithTarget:options:soupName:updateBlock:</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSmartSyncSyncManager/syncUpWithTarget:options:soupName:syncName:updateBlock:</TokenIdentifier>
			<Abstract type="html">Creates and runs a named sync up.</Abstract>
			<DeclaredIn>SFSmartSyncSyncManager.h</DeclaredIn>
			
			<Declaration>- (nullable SFSyncState *)syncUpWithTarget:(SFSyncUpTarget *)target options:(SFSyncOptions *)options soupName:(NSString *)soupName syncName:(nullable NSString *)syncName updateBlock:(SFSyncSyncManagerUpdateBlock)updateBlock</Declaration>
			<Parameters>
				<Parameter>
					<Name>target</Name>
					<Abstract type="html">The sync up target that will manage the sync up process.</Abstract>
				</Parameter><Parameter>
					<Name>options</Name>
					<Abstract type="html">The options associated with this sync up.</Abstract>
				</Parameter><Parameter>
					<Name>soupName</Name>
					<Abstract type="html">The soup name where the local entries are stored.</Abstract>
				</Parameter><Parameter>
					<Name>syncName</Name>
					<Abstract type="html">The name for this sync.</Abstract>
				</Parameter><Parameter>
					<Name>updateBlock</Name>
					<Abstract type="html">The block to be called with updates.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The sync state associated with this sync or nil if it could not be created.</Abstract></ReturnValue>
			<Anchor>//api/name/syncUpWithTarget:options:soupName:syncName:updateBlock:</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSmartSyncSyncManager/syncUpWithTarget:options:soupName:syncName:updateBlock:error:</TokenIdentifier>
			<Abstract type="html">Creates and runs a named sync up.</Abstract>
			<DeclaredIn>SFSmartSyncSyncManager.h</DeclaredIn>
			
			<Declaration>- (nullable SFSyncState *)syncUpWithTarget:(SFSyncUpTarget *)target options:(SFSyncOptions *)options soupName:(NSString *)soupName syncName:(nullable NSString *)syncName updateBlock:(SFSyncSyncManagerUpdateBlock)updateBlock error:(NSError **)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>target</Name>
					<Abstract type="html">The sync up target that will manage the sync up process.</Abstract>
				</Parameter><Parameter>
					<Name>options</Name>
					<Abstract type="html">The options associated with this sync up.</Abstract>
				</Parameter><Parameter>
					<Name>soupName</Name>
					<Abstract type="html">The soup name where the local entries are stored.</Abstract>
				</Parameter><Parameter>
					<Name>syncName</Name>
					<Abstract type="html">The name for this sync.</Abstract>
				</Parameter><Parameter>
					<Name>updateBlock</Name>
					<Abstract type="html">The block to be called with updates.</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">Sets error if sync could not be created.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The sync state associated with this sync or nil if it could not be created.</Abstract></ReturnValue>
			<Anchor>//api/name/syncUpWithTarget:options:soupName:syncName:updateBlock:error:</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSmartSyncSyncManager/cleanResyncGhosts:completionStatusBlock:</TokenIdentifier>
			<Abstract type="html">Removes local copies of records that have been deleted on the server
or do not match the query results on the server anymore.</Abstract>
			<DeclaredIn>SFSmartSyncSyncManager.h</DeclaredIn>
			
			<Declaration>- (BOOL)cleanResyncGhosts:(NSNumber *)syncId completionStatusBlock:(SFSyncSyncManagerCompletionStatusBlock)completionStatusBlock</Declaration>
			<Parameters>
				<Parameter>
					<Name>syncId</Name>
					<Abstract type="html">Sync ID.</Abstract>
				</Parameter><Parameter>
					<Name>completionStatusBlock</Name>
					<Abstract type="html">Completion status block.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">YES if cleanResyncGhosts started successfully.</Abstract></ReturnValue>
			<Anchor>//api/name/cleanResyncGhosts:completionStatusBlock:</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSmartSyncSyncManager/cleanResyncGhosts:completionStatusBlock:error:</TokenIdentifier>
			<Abstract type="html">Removes local copies of records that have been deleted on the server
or do not match the query results on the server anymore.</Abstract>
			<DeclaredIn>SFSmartSyncSyncManager.h</DeclaredIn>
			
			<Declaration>- (BOOL)cleanResyncGhosts:(NSNumber *)syncId completionStatusBlock:(SFSyncSyncManagerCompletionStatusBlock)completionStatusBlock error:(NSError **)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>syncId</Name>
					<Abstract type="html">Sync ID.</Abstract>
				</Parameter><Parameter>
					<Name>completionStatusBlock</Name>
					<Abstract type="html">Completion status block.</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">Sets error if clean operation could not be started.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">YES if cleanResyncGhosts started successfully.</Abstract></ReturnValue>
			<Anchor>//api/name/cleanResyncGhosts:completionStatusBlock:error:</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSmartSyncSyncManager/cleanResyncGhostsByName:completionStatusBlock:error:</TokenIdentifier>
			<Abstract type="html">Removes local copies of records that have been deleted on the server
or do not match the query results on the server anymore.</Abstract>
			<DeclaredIn>SFSmartSyncSyncManager.h</DeclaredIn>
			
			<Declaration>- (BOOL)cleanResyncGhostsByName:(NSString *)syncName completionStatusBlock:(SFSyncSyncManagerCompletionStatusBlock)completionStatusBlock error:(NSError **)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>syncName</Name>
					<Abstract type="html">Sync Name.</Abstract>
				</Parameter><Parameter>
					<Name>completionStatusBlock</Name>
					<Abstract type="html">Completion status block.</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">Sets error if clean operation could not be started.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">YES if cleanResyncGhosts started successfully.</Abstract></ReturnValue>
			<Anchor>//api/name/cleanResyncGhostsByName:completionStatusBlock:error:</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSmartSyncSyncManager/addToActiveSyncs:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>SFSmartSyncSyncManager+SFSyncTask.h</DeclaredIn>
			
			<Declaration>- (void)addToActiveSyncs:(SFSyncTask *)syncTask</Declaration>
			
			
			<Anchor>//api/name/addToActiveSyncs:</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFSmartSyncSyncManager/removeFromActiveSyncs:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>SFSmartSyncSyncManager+SFSyncTask.h</DeclaredIn>
			
			<Declaration>- (void)removeFromActiveSyncs:(SFSyncTask *)syncTask</Declaration>
			
			
			<Anchor>//api/name/removeFromActiveSyncs:</Anchor>
            <NodeRef refid="30"/>
		</Token>
		
        
        
	</File>
</Tokens>